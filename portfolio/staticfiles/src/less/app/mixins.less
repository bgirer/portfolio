.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// Single side border-radius
.border-top-radius(@radius) {
  border-top-right-radius: @radius;
  border-top-left-radius: @radius;
}

.border-right-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-top-right-radius: @radius;
}

.border-bottom-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-bottom-left-radius: @radius;
}

.border-left-radius(@radius) {
  border-bottom-left-radius: @radius;
  border-top-left-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
  box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
  transition: @transition;
}

.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
  transition-delay: @transition-delay;
}

.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
  transition-duration: @transition-duration;
}

.transition-transform(@transition) {
  -webkit-transition: -webkit-transform @transition;
  transition: transform @transition;
}

// Backface visibility
.backface-visibility(@visibility) {
  -webkit-backface-visibility: @visibility;
  backface-visibility: @visibility;
}

// Transformations
.transform(@scale, @rotate) {
  -webkit-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}

.scale(@ratio) {
  -webkit-transform: scale(@ratio);
  -ms-transform: scale(@ratio);
  transform: scale(@ratio);
}

.scale(@ratioX; @ratioY) {
  -webkit-transform: scale(@ratioX, @ratioY);
  -ms-transform: scale(@ratioX, @ratioY);
  transform: scale(@ratioX, @ratioY);
}

.scaleX(@ratio) {
  -webkit-transform: scaleX(@ratio);
  -ms-transform: scaleX(@ratio);
  transform: scaleX(@ratio);
}

.scaleY(@ratio) {
  -webkit-transform: scaleY(@ratio);
  -ms-transform: scaleY(@ratio);
  transform: scaleY(@ratio);
}

.skew(@x; @y) {
  -webkit-transform: skewX(@x) skewY(@y);
  -ms-transform: skewX(@x) skewY(@y);
  transform: skewX(@x) skewY(@y);
}

.translate(@x; @y) {
  -webkit-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  transform: translate(@x, @y);
}

.translateX(@x) {
  -webkit-transform: translateX(@x);
  -ms-transform: translateX(@x);
  transform: translateX(@x);
}

.translateY(@y) {
  -webkit-transform: translateY(@y);
  -ms-transform: translateY(@y);
  transform: translateY(@y);
}

.translate3d(@x; @y; @z) {
  -webkit-transform: translateX(@x) translateY(@y) translateZ(@z);
  -ms-transform: translateX(@x) translateY(@y);
  transform: translateX(@x) translateY(@y) translateZ(@z);
}

.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
  -ms-transform: rotate(@degrees);
  transform: rotate(@degrees);
}

.rotateX(@degrees) {
  -webkit-transform: rotateX(@degrees);
  -ms-transform: rotateX(@degrees);
  transform: rotateX(@degrees);
}

.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
  -ms-transform: rotateY(@degrees);
  transform: rotateY(@degrees);
}

.perspective(@perspective) {
  -webkit-perspective: @perspective;
  -moz-perspective: @perspective;
  perspective: @perspective;
}

.perspective-origin(@perspective) {
  -webkit-perspective-origin: @perspective;
  -moz-perspective-origin: @perspective;
  perspective-origin: @perspective;
}

.transform-origin(@origin) {
  -webkit-transform-origin: @origin;
  -moz-transform-origin: @origin;
  -ms-transform-origin: @origin;
  transform-origin: @origin;
}

// Animations
.animation(@animation) {
  -webkit-animation: @animation;
  animation: @animation;
}

// Typography
.text-emphasis-variant(@color) {
  color: @color;

  a&:hover,
  a&:active,
  a&:focus,
  button&:hover,
  button&:active,
  button&:focus {
    color: @color;
    opacity: .75;
  }
}

// Contextual backgrounds
.bg-variant(@color) {
  background-color: @color;
  a&:hover,
  a&:focus {
    background-color: darken(@color, 10%);
  }
}

// Buttons
.button-variant(@color; @background; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;

  &:focus,
  &.focus,
  &:hover {
    color: @color;
    background-color: darken(@background, 8%);
    border-color: darken(@border, 12%);
  }

  &:active,
  &.active,
  .open > .dropdown-toggle& {
    color: @color;
    background-color: darken(@background, 18%);
    border-color: darken(@border, 22%);

    &:hover,
    &:focus,
    &.focus {
      color: @color;
      background-color: darken(@background, 18%);
      border-color: darken(@border, 22%);
    }
  }

  &:active,
  &.active,
  .open > .dropdown-toggle& {
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: @background;
      border-color: @border;
    }
  }

  .badge {
    color: @background;
    background-color: @color;
  }
}

.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  line-height: @line-height;
  border-radius: @border-radius;
}

.alert-variant(@background; @text-color) {
  background-color: @background;
  color: @text-color;
  .box-shadow(0 2px darken(@background, 5%));

  hr {
    border-top-color: darken(@background, 5%);
  }

  .alert-link {
    color: darken(@text-color, 10%);
  }
}

// Panels
.panel-variant(@border; @heading-text-color; @heading-bg-color; @heading-border) {
  border-color: @border;

  & > .panel-heading {
    color: @heading-text-color;
    background-color: @heading-bg-color;
    border-color: @heading-border;

    + .panel-collapse > .panel-body {
      border-top-color: @border;
    }
    .badge {
      color: @heading-bg-color;
      background-color: @heading-text-color;
    }

    a {
      font-weight: 400;

      &:hover,
      &:focus {
        color: darken(@heading-text-color, 10%);
      }
    }
  }

  & > .panel-footer {
    + .panel-collapse > .panel-body {
      border-bottom-color: @border;
    }
  }
}

.push-generate(@space) {
  margin-bottom: @space !important;

  &-t {
    margin-top: @space !important;
  }
  &-r {
    margin-right: @space !important;
  }
  &-l {
    margin-left: @space !important;
  }
}

.vertical-align() {
  position: absolute;
  top: 50%;
  .translateY(-50%);
}

// Typography
.text-emphasis-variant(@color) {
  color: @color;

  a&:hover,
  a&:active,
  a&:focus,
  button&:hover,
  button&:active,
  button&:focus {
    color: @color;
    opacity: .75;
  }
}

// Contextual backgrounds
.bg-variant(@color) {
  background-color: @color;
  a&:hover,
  a&:focus {
    background-color: darken(@color, 10%);
  }
}

// Forms
.form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
  // Color the label and help text
  > label,
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label {
    color: @text-color;
  }
  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: @border-color;
    .box-shadow(none);
    &:focus {
      border-color: darken(@border-color, 10%);
      .box-shadow(none);
    }
  }
  // Set validation states also for addons
  .input-group-addon {
    color: @text-color;
    border-color: @border-color;
    background-color: @background-color;
  }
  // Optional feedback icon
  .form-control-feedback {
    color: @text-color;
  }
}

.input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
  height: @input-height;
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  line-height: @line-height;
  border-radius: @border-radius;

  select& {
    height: @input-height;
    line-height: @input-height;
  }
}

.placeholder(@color) {
  // Firefox
  &::-moz-placeholder {
    color: @color;
  }
  &:-ms-input-placeholder {
    color: @color;
  }
  // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: @color;
  }
  // Safari and Chrome
}

// Labels
.label-variant(@color) {
  background-color: @color;

  &[href] {
    &:hover,
    &:focus {
      background-color: darken(@color, 10%);
    }
  }
}